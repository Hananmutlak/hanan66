{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,C,E,C,E,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,G,C,C,E,C,O,C,C,E,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,O,C,K,E,E,S,C,K,E,E,S,C,K,E,E,C,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,I,E,E,E,A,C,U,O,S,A,a,O,O,O,O,C,E,Y,O,Q,O,G,E,O,W,O,C,E,C,E,C,M,C,S,C,C,C,C,C,C,C,ECOA,IAAM,EAAgB,SAAS,cAAc,CAAC,iBAE9C,SAAS,IACL,GACJ,CAEA,eAAe,IACX,GAAK,GAoBL,EAAc,SAAS,CAAG,0EAhB1B,GAAI,CACA,IACM,EAAW,MAAM,MADX,kGAGZ,GAAI,CAAC,EAAS,EAAE,CACZ,MAAM,AAAI,MAAM,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAA,CAAE,EAG5D,IAAM,EAAO,MAAM,EAAS,IAAI,IAChC,AAcR,SAAqB,CAAQ,EACzB,GAAI,CAAC,GAAU,OAAQ,CACnB,EAAc,SAAS,CAAG,iCAC1B,MACJ,CAEA,EAAc,SAAS,CAAG,EAAS,GAAG,CAAC,AAAA,GAAW,CAAC;A;AAEjC,sBAAA,EAAE,EAAQ,KAAK,EAAI,uCAAuC;AAC1D,sBAAA,EAAE,EAAQ,KAAK,EAAI,aAAa;A;A;AAGzB,6BAAA,EAAE,EAAQ,GAAG,CAAC;AACvB,oBAAA,EAAE,EAAQ,KAAK,EAAI;A;AAEpB,mBAAA,EAAE,EAAQ,WAAW,EAAE,UAAU,EAAG,MAAQ,2BAA2B;A;AAEhE,0BAAA,EAAE,EAAQ,MAAM,EAAE,MAAQ,iBAAiB;AAC3C,0BAAA,EAAE,IAAI,KAAK,EAAQ,WAAW,EAAE,kBAAkB,GAAG;A;A;A;AAI3E,IAAA,CAAC,EAAE,IAAI,CAAC,GACZ,EArCoB,EAAK,QAAQ,CAC7B,CAAE,MAAO,EAAO,KASM,EAAA,EARD,CAAC,qBAAqB,EAAE,EAAM,OAAO,CAAA,CAAE,CAS5D,EAAc,SAAS,CAAG,CAAC,iBAAiB,EAAE,EAAI,IAAI,CAAC,AARvD,EACJ,CAmCI,AAAwB,YAAxB,SAAS,UAAU,CACnB,SAAS,gBAAgB,CAAC,mBAAoB,GAE9C,G,E,C,E,E,C,Q,C,Q,oB,C","sources":["<anon>","src/js/news.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (\n  modules,\n  entry,\n  mainEntry,\n  parcelRequireName,\n  externals,\n  distDir,\n  publicUrl,\n  devServer\n) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var importMap = previousRequire.i || {};\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        if (externals[name]) {\n          return externals[name];\n        }\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.require = nodeRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.distDir = distDir;\n  newRequire.publicUrl = publicUrl;\n  newRequire.devServer = devServer;\n  newRequire.i = importMap;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  // Only insert newRequire.load when it is actually used.\n  // The code in this file is linted against ES5, so dynamic import is not allowed.\n  // INSERT_LOAD_HERE\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n    }\n  }\n})({\"juMe2\":[function(require,module,exports,__globalThis) {\n/**\n * @module NewsModule\n * @description Handles fetching and displaying health-related news\n */ const NEWS_API_KEY = 'YOUR_GNEWS_API_KEY';\nconst newsContainer = document.getElementById('newsContainer');\nfunction initNewsModule() {\n    fetchNews();\n}\nasync function fetchNews() {\n    if (!newsContainer) return;\n    showLoadingMessage(\"Loading latest health news...\");\n    try {\n        const url = `https://gnews.io/api/v4/top-headlines?category=health&lang=en&max=10&apikey=${NEWS_API_KEY}`;\n        const response = await fetch(url);\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n        const data = await response.json();\n        displayNews(data.articles);\n    } catch (error) {\n        showErrorMessage(`Error fetching news: ${error.message}`);\n    }\n}\nfunction showLoadingMessage(msg) {\n    newsContainer.innerHTML = `<div class=\"loading-spinner\"><p>${msg}</p></div>`;\n}\nfunction showErrorMessage(msg) {\n    newsContainer.innerHTML = `<p class=\"error\">${msg}</p>`;\n}\nfunction displayNews(articles) {\n    if (!articles?.length) {\n        newsContainer.innerHTML = \"<p>No news articles found.</p>\";\n        return;\n    }\n    newsContainer.innerHTML = articles.map((article)=>` \n        <article class=\"news-article\">\n            <img src=\"${article.image || './assets/images/news-placeholder.jpg'}\" \n                 alt=\"${article.title || 'News image'}\"\n                 onerror=\"this.src='./assets/images/news-placeholder.jpg'\">\n            <div class=\"news-content\">\n                <h3><a href=\"${article.url}\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    ${article.title || \"No title available\"}\n                </a></h3>\n                <p>${article.description?.substring(0, 100) || \"No description available\"}...</p>\n                <footer>\n                    <span>${article.source?.name || \"Unknown source\"}</span>\n                    <time>${new Date(article.publishedAt).toLocaleDateString()}</time>\n                </footer>\n            </div>\n        </article>\n    `).join('');\n}\nif (document.readyState === 'loading') document.addEventListener('DOMContentLoaded', initNewsModule);\nelse initNewsModule();\n\n},{}]},[\"juMe2\"], \"juMe2\", \"parcelRequire5828\", {})\n\n//# sourceMappingURL=news.6d754e42.js.map\n","/**\n * @module NewsModule\n * @description Handles fetching and displaying health-related news\n */\n\nconst NEWS_API_KEY = 'YOUR_GNEWS_API_KEY';\n\nconst newsContainer = document.getElementById('newsContainer');\n\nfunction initNewsModule() {\n    fetchNews();\n}\n\nasync function fetchNews() {\n    if (!newsContainer) return;\n    \n    showLoadingMessage(\"Loading latest health news...\");\n    \n    try {\n        const url = `https://gnews.io/api/v4/top-headlines?category=health&lang=en&max=10&apikey=${NEWS_API_KEY}`;\n        const response = await fetch(url);\n        \n        if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        \n        const data = await response.json();\n        displayNews(data.articles);\n    } catch (error) {\n        showErrorMessage(`Error fetching news: ${error.message}`);\n    }\n}\n\nfunction showLoadingMessage(msg) {\n    newsContainer.innerHTML = `<div class=\"loading-spinner\"><p>${msg}</p></div>`;\n}\n\nfunction showErrorMessage(msg) {\n    newsContainer.innerHTML = `<p class=\"error\">${msg}</p>`;\n}\n\nfunction displayNews(articles) {\n    if (!articles?.length) {\n        newsContainer.innerHTML = \"<p>No news articles found.</p>\";\n        return;\n    }\n\n    newsContainer.innerHTML = articles.map(article => ` \n        <article class=\"news-article\">\n            <img src=\"${article.image || './assets/images/news-placeholder.jpg'}\" \n                 alt=\"${article.title || 'News image'}\"\n                 onerror=\"this.src='./assets/images/news-placeholder.jpg'\">\n            <div class=\"news-content\">\n                <h3><a href=\"${article.url}\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    ${article.title || \"No title available\"}\n                </a></h3>\n                <p>${article.description?.substring(0, 100) || \"No description available\"}...</p>\n                <footer>\n                    <span>${article.source?.name || \"Unknown source\"}</span>\n                    <time>${new Date(article.publishedAt).toLocaleDateString()}</time>\n                </footer>\n            </div>\n        </article>\n    `).join('');\n}\n\nif (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', initNewsModule);\n} else {\n    initNewsModule();\n}"],"names":["modules","entry","mainEntry","parcelRequireName","externals","distDir","publicUrl","devServer","globalObject","globalThis","self","window","global","previousRequire","importMap","i","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","length","mainExports","define","amd","__globalThis","newsContainer","document","getElementById","initNewsModule","fetchNews","innerHTML","response","fetch","ok","status","data","json","displayNews","articles","map","article","image","title","url","description","substring","source","Date","publishedAt","toLocaleDateString","join","error","msg","message","readyState","addEventListener"],"version":3,"file":"news.6d754e42.js.map"}