{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,C,E,C,E,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,G,C,C,E,C,O,C,C,E,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,O,C,K,E,E,S,C,K,E,E,S,C,K,E,E,C,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,I,E,E,E,A,C,U,O,S,A,a,O,O,O,O,C,E,Y,O,Q,O,G,E,O,W,O,C,E,C,E,C,M,C,S,C,C,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCyIA,EAAA,MAAA,CAAA,EAAA,sBAAA,IAAS,GAnIT,IAAM,EAAgB,SAAS,cAAc,CAAC,iBAC1C,EAAiB,GAKrB,SAAS,IAEL,SAAS,gBAAgB,CAAC,kBAAmB,GAG7C,GACJ,CAMA,SAAS,EAAsB,CAAK,EAC5B,EAAM,MAAM,EAAE,SAEd,EADiB,EAAM,MAAM,CAAC,OAAO,CAG7C,CAMA,eAAe,EAAoB,CAAO,EACtC,GAAK,GAEL,AAkCJ,CAAA,SAA2B,CAAI,EAC3B,IAAM,EAAc,SAAS,aAAa,CAAC,YACvC,GAAa,CAAA,EAAY,WAAW,CAAG,CAA3C,C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","sources":["<anon>","src/js/news.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (\n  modules,\n  entry,\n  mainEntry,\n  parcelRequireName,\n  externals,\n  distDir,\n  publicUrl,\n  devServer\n) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var importMap = previousRequire.i || {};\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        if (externals[name]) {\n          return externals[name];\n        }\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.require = nodeRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.distDir = distDir;\n  newRequire.publicUrl = publicUrl;\n  newRequire.devServer = devServer;\n  newRequire.i = importMap;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  // Only insert newRequire.load when it is actually used.\n  // The code in this file is linted against ES5, so dynamic import is not allowed.\n  // INSERT_LOAD_HERE\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n    }\n  }\n})({\"juMe2\":[function(require,module,exports,__globalThis) {\n/**\r\n * @module NewsModule\r\n * @description Handles fetching and displaying health-related news with country integration\r\n */ // Global variables\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"fetchNewsForCountry\", ()=>fetchNewsForCountry);\nconst newsContainer = document.getElementById('newsContainer');\nlet currentCountry = '';\n/**\r\n * Initializes the news module and sets up event listeners\r\n */ function initNewsModule() {\n    // Listen for country selection events from the map\n    document.addEventListener('countrySelected', handleCountrySelected);\n    // Fetch general health news on initial load\n    fetchNews();\n}\n/**\r\n * Handles the country selection event from the map\r\n * @param {CustomEvent} event - The country selection event\r\n */ function handleCountrySelected(event) {\n    if (event.detail?.country) {\n        currentCountry = event.detail.country;\n        fetchNewsForCountry(currentCountry);\n    }\n}\n/**\r\n * Fetches news specifically for the selected country\r\n * @param {string} country - The country to fetch news for\r\n */ async function fetchNewsForCountry(country) {\n    if (!newsContainer) return;\n    updateNewsHeading(`Latest Disease News for ${country}`);\n    showLoadingMessage(`Loading news for ${country}...`);\n    try {\n        const apiKey = '6757b6f31a9eb5abba3c0fd90dcef209'; // استبدل بمفتاحك الفعلي\n        const url = `http://api.mediastack.com/v1/news?access_key=${apiKey}&languages=en&country=${getCountryCode(country)}&categories=health`;\n        const response = await fetch(url);\n        handleResponse(response);\n    } catch (error) {\n        showErrorMessage(`Error fetching news: ${error.message}`);\n    }\n}\n/**\r\n * Fetches general health news\r\n */ async function fetchNews() {\n    if (!newsContainer) return;\n    showLoadingMessage(\"Loading latest health news...\");\n    try {\n        const apiKey = '6757b6f31a9eb5abba3c0fd90dcef209'; // استبدل بمفتاحك الفعلي\n        const url = `http://api.mediastack.com/v1/news?access_key=${apiKey}&languages=en&categories=health`;\n        const response = await fetch(url);\n        handleResponse(response);\n    } catch (error) {\n        showErrorMessage(`Error fetching news: ${error.message}`);\n    }\n}\n// Helper functions\nfunction updateNewsHeading(text) {\n    const newsHeading = document.querySelector('#news h2');\n    if (newsHeading) newsHeading.textContent = text;\n}\nfunction showLoadingMessage(msg) {\n    newsContainer.innerHTML = `<div class=\"loading-spinner\"><p>${msg}</p></div>`;\n}\nfunction showErrorMessage(msg) {\n    newsContainer.innerHTML = `<p class=\"error\">${msg}</p>`;\n}\nfunction handleResponse(response) {\n    if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n    return response.json().then((data)=>displayNews(data.data));\n}\nfunction getCountryCode(countryName) {\n    const countryCodes = {\n        'usa': 'us',\n        'united states': 'us',\n        'sweden': 'se'\n    };\n    return countryCodes[countryName.toLowerCase()] || 'us';\n}\n/**\r\n * Displays news articles\r\n * @param {Array} articles - Array of news articles\r\n */ function displayNews(articles) {\n    if (!articles?.length) {\n        newsContainer.innerHTML = \"<p>No news articles found.</p>\";\n        return;\n    }\n    newsContainer.innerHTML = articles.slice(0, 12).map((article)=>` \n        <article class=\"news-article\">\n            <img src=\"${article.image || 'https://via.placeholder.com/300?text=No+Image'}\" \n                 alt=\"${article.title || 'News image'}\">\n            <div class=\"news-content\">\n                <h3><a href=\"${article.url}\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    ${article.title || \"No title available\"}\n                </a></h3>\n                <p>${article.description?.substring(0, 100) || \"No description available\"}...</p>\n                <footer>\n                    <span>${article.source?.name || \"Unknown source\"}</span>\n                    <time>${new Date(article.published_at).toLocaleDateString()}</time>\n                </footer>\n            </div>\n        </article>\n    `).join('');\n}\n// Initialize when DOM is ready\nif (document.readyState === 'loading') document.addEventListener('DOMContentLoaded', initNewsModule);\nelse initNewsModule();\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"l5Lmv\"}],\"l5Lmv\":[function(require,module,exports,__globalThis) {\nexports.interopDefault = function(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n};\nexports.defineInteropFlag = function(a) {\n    Object.defineProperty(a, '__esModule', {\n        value: true\n    });\n};\nexports.exportAll = function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n};\nexports.export = function(dest, destName, get) {\n    Object.defineProperty(dest, destName, {\n        enumerable: true,\n        get: get\n    });\n};\n\n},{}]},[\"juMe2\"], \"juMe2\", \"parcelRequire5828\", {})\n\n//# sourceMappingURL=news.480f994a.js.map\n","/**\r\n * @module NewsModule\r\n * @description Handles fetching and displaying health-related news with country integration\r\n */\r\n\r\n// Global variables\r\nconst newsContainer = document.getElementById('newsContainer');\r\nlet currentCountry = '';\r\n\r\n/**\r\n * Initializes the news module and sets up event listeners\r\n */\r\nfunction initNewsModule() {\r\n    // Listen for country selection events from the map\r\n    document.addEventListener('countrySelected', handleCountrySelected);\r\n    \r\n    // Fetch general health news on initial load\r\n    fetchNews();\r\n}\r\n\r\n/**\r\n * Handles the country selection event from the map\r\n * @param {CustomEvent} event - The country selection event\r\n */\r\nfunction handleCountrySelected(event) {\r\n    if (event.detail?.country) {\r\n        currentCountry = event.detail.country;\r\n        fetchNewsForCountry(currentCountry);\r\n    }\r\n}\r\n\r\n/**\r\n * Fetches news specifically for the selected country\r\n * @param {string} country - The country to fetch news for\r\n */\r\nasync function fetchNewsForCountry(country) {\r\n    if (!newsContainer) return;\r\n    \r\n    updateNewsHeading(`Latest Disease News for ${country}`);\r\n    showLoadingMessage(`Loading news for ${country}...`);\r\n    \r\n    try {\r\n        const apiKey = '6757b6f31a9eb5abba3c0fd90dcef209'; // استبدل بمفتاحك الفعلي\r\n        const url = `http://api.mediastack.com/v1/news?access_key=${apiKey}&languages=en&country=${getCountryCode(country)}&categories=health`;\r\n\r\n        const response = await fetch(url);\r\n        handleResponse(response);\r\n    } catch (error) {\r\n        showErrorMessage(`Error fetching news: ${error.message}`);\r\n    }\r\n}\r\n\r\n/**\r\n * Fetches general health news\r\n */\r\nasync function fetchNews() {\r\n    if (!newsContainer) return;\r\n    \r\n    showLoadingMessage(\"Loading latest health news...\");\r\n    \r\n    try {\r\n        const apiKey = '6757b6f31a9eb5abba3c0fd90dcef209'; // استبدل بمفتاحك الفعلي\r\n        const url = `http://api.mediastack.com/v1/news?access_key=${apiKey}&languages=en&categories=health`;\r\n        \r\n        const response = await fetch(url);\r\n        handleResponse(response);\r\n    } catch (error) {\r\n        showErrorMessage(`Error fetching news: ${error.message}`);\r\n    }\r\n}\r\n\r\n// Helper functions\r\nfunction updateNewsHeading(text) {\r\n    const newsHeading = document.querySelector('#news h2');\r\n    if (newsHeading) newsHeading.textContent = text;\r\n}\r\n\r\nfunction showLoadingMessage(msg) {\r\n    newsContainer.innerHTML = `<div class=\"loading-spinner\"><p>${msg}</p></div>`;\r\n}\r\n\r\nfunction showErrorMessage(msg) {\r\n    newsContainer.innerHTML = `<p class=\"error\">${msg}</p>`;\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n    return response.json().then(data => displayNews(data.data));\r\n}\r\n\r\nfunction getCountryCode(countryName) {\r\n    const countryCodes = {\r\n        'usa': 'us',\r\n        'united states': 'us',\r\n        'sweden': 'se',\r\n        // أضف المزيد من الدول حسب الحاجة\r\n    };\r\n    return countryCodes[countryName.toLowerCase()] || 'us';\r\n}\r\n\r\n/**\r\n * Displays news articles\r\n * @param {Array} articles - Array of news articles\r\n */\r\nfunction displayNews(articles) {\r\n    if (!articles?.length) {\r\n        newsContainer.innerHTML = \"<p>No news articles found.</p>\";\r\n        return;\r\n    }\r\n\r\n    newsContainer.innerHTML = articles.slice(0, 12).map(article => ` \r\n        <article class=\"news-article\">\r\n            <img src=\"${article.image || 'https://via.placeholder.com/300?text=No+Image'}\" \r\n                 alt=\"${article.title || 'News image'}\">\r\n            <div class=\"news-content\">\r\n                <h3><a href=\"${article.url}\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    ${article.title || \"No title available\"}\r\n                </a></h3>\r\n                <p>${article.description?.substring(0, 100) || \"No description available\"}...</p>\r\n                <footer>\r\n                    <span>${article.source?.name || \"Unknown source\"}</span>\r\n                    <time>${new Date(article.published_at).toLocaleDateString()}</time>\r\n                </footer>\r\n            </div>\r\n        </article>\r\n    `).join('');\r\n}\r\n\r\n// Initialize when DOM is ready\r\nif (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', initNewsModule);\r\n} else {\r\n    initNewsModule();\r\n}\r\n\r\nexport { fetchNewsForCountry };\r\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","externals","distDir","publicUrl","devServer","globalObject","globalThis","self","window","global","previousRequire","importMap","i","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","length","mainExports","define","amd","__globalThis","parcelHelpers","defineInteropFlag","export","fetchNewsForCountry","newsContainer","document","getElementById","currentCountry","initNewsModule","addEventListener","handleCountrySelected","fetchNews","event","detail","country","updateNewsHeading","text","newsHeading","querySelector","textContent","showLoadingMessage","url","countryCodes","countryName","toLowerCase","response","fetch","handleResponse","error","showErrorMessage","message","msg","innerHTML","ok","status","json","then","data","displayNews","articles","slice","map","article","image","title","description","substring","source","Date","published_at","toLocaleDateString","join","readyState","interopDefault","a","__esModule","default","value","exportAll","dest","keys","forEach","key","prototype","hasOwnProperty","enumerable","destName"],"version":3,"file":"news.480f994a.js.map"}