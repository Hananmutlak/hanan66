{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,C,E,C,E,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,G,C,C,E,C,O,C,C,E,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,O,C,K,E,E,S,C,K,E,E,S,C,K,E,E,C,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,I,E,E,E,A,C,U,O,S,A,a,O,O,O,O,C,E,Y,O,Q,O,G,E,O,W,O,C,E,C,E,C,M,C,S,C,C,C,C,C,C,C,ECCA,WACA,KACA,IAAM,EAAgB,SAAS,cAAc,CAAC,iBACxC,EAAc,SAAS,cAAc,CAAC,eACxC,EAAc,EAAE,CACd,EAAS,mCASf,eAAe,IACX,GAAI,CACA,IACA,IAAM,EAAM,CAAC,oFAAoF,EAAE,EAAA,CAAQ,CACrG,EAAW,MAAM,MAAM,GAE7B,EAAc,AADD,CAAA,MAAM,EAAS,IAAI,EAAhC,EACmB,QAAQ,CAC3B,EAAY,EAChB,CAAE,MAAO,EAAO,CACZ,EAAU,EACd,CACJ,CACA,eAAe,EAAoB,CAAO,EACtC,GAAI,CACA,IACA,EAAY,WAAW,CAAG,CAAC,uBAAuB,EAAE,EAAA,CAAS,CAC7D,IAAM,EAAQ,CAAC,iCAAiC,EAAE,EAAA,CAAS,CACrD,EAAM,CAAC,oCAAoC,EAAE,mBAAmB,GAAO,uCAAuC,EAAE,EAAA,CAAQ,CAExH,EAAW,MAAM,MAAM,GAE7B,GAAI,CAAC,EAAS,EAAE,CAAE,MAAM,AAAI,MAAM,+BAGlC,EAAc,AADD,CAAA,MAAM,EAAS,IAAI,EAAhC,EACmB,QAAQ,CAC3B,EAAY,EAChB,CAAE,MAAO,EAAO,CACZ,EAAU,GACV,GACJ,CACJ,CAEA,SAAS,IACL,EAAc,SAAS,CAAG;A;A;A;A;AAK1B,IAAA,CAAC,AACL,CAEA,SAAS,EAAY,CAAQ,EACzB,GAAI,CAAC,GAAY,AAAoB,IAApB,EAAS,MAAM,CAAQ,CACpC,EAAc,SAAS,CAAG;A;A;A;A;AAK1B,QAAA,CAAC,CACD,MACJ,CAEA,EAAc,SAAS,CAAG,EAAS,GAAG,CAAC,AAAA,QAoBvB,QApBkC;A;A;AAG5B,0BAAA,EAAE,EAAQ,UAAU,EAAI,uCAAuC;AAC/D,0BAAA,EAAE,EAAQ,KAAK,EAAI,aAAa;A;A;A;A;AAK7B,6BAAA,EAAE,EAAQ,GAAG,CAAC,iCAAiC,EAAE,EAAQ,KAAK,EAAI,qBAAqB;AACxE,4CAAA,EAAE,EAAQ,WAAW,EAAE,UAAU,EAAG,MAAQ,2BAA2B;A;AAE3D,wDAAA,EAAE,EAAQ,MAAM,EAAE,MAAQ,iBAAiB;AACrC,8DAAA,EAQ1D,CADgB,EAPuD,EAAQ,WAAW,EAUnF,IAAI,KAAK,GAAY,kBAAkB,CAAC,KAAA,EAD/B,CAAE,KAAM,UAAW,MAAO,QAAS,IAAK,SAAU,GAD1C,eARoE;A;A;A;AAI5F,IAAA,CAAC,GAAE,IAAI,CAAC,GACZ,CAQA,SAAS,EAAU,CAAK,EACpB,QAAQ,KAAK,CAAC,SAAU,GACxB,EAAc,SAAS,CAAG;A;A;AAGK,mCAAA,EAAE,EAAM,OAAO,CAAC;A;A;A;A;AAK/C,IAAA,CAAC,AACL,CAhGA,SAAS,gBAAgB,CAAC,mBAE1B,WACI,IAAM,EAAkB,aAAa,OAAO,CAAC,kBAC7C,CAAA,EAAkB,EAAoB,GAAmB,GAC7D,GA8FA,OAAO,oBAAoB,CAAG,AAAC,IAC3B,EAAoB,EACxB,C,E,C,E,E,C,Q,C,Q,oB,C","sources":["<anon>","src/js/news.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (\n  modules,\n  entry,\n  mainEntry,\n  parcelRequireName,\n  externals,\n  distDir,\n  publicUrl,\n  devServer\n) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var importMap = previousRequire.i || {};\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        if (externals[name]) {\n          return externals[name];\n        }\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.require = nodeRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.distDir = distDir;\n  newRequire.publicUrl = publicUrl;\n  newRequire.devServer = devServer;\n  newRequire.i = importMap;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  // Only insert newRequire.load when it is actually used.\n  // The code in this file is linted against ES5, so dynamic import is not allowed.\n  // INSERT_LOAD_HERE\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n    }\n  }\n})({\"juMe2\":[function(require,module,exports,__globalThis) {\njavascript;\nCopy;\nconst newsContainer = document.getElementById('newsContainer');\nconst newsHeading = document.getElementById('newsHeading');\nlet allArticles = [];\nconst apiKey = '8cf220f2e3f548b78aa38afc2f12b039'; // استبدل بمفتاحك\ndocument.addEventListener('DOMContentLoaded', initNewsModule);\nfunction initNewsModule() {\n    const selectedCountry = localStorage.getItem('selectedCountry');\n    selectedCountry ? fetchNewsForCountry(selectedCountry) : fetchGeneralNews();\n}\nasync function fetchGeneralNews() {\n    try {\n        showLoading();\n        const url = `https://newsapi.org/v2/top-headlines?category=health&language=en&pageSize=30&apiKey=${apiKey}`;\n        const response = await fetch(url);\n        const data = await response.json();\n        allArticles = data.articles;\n        displayNews(allArticles);\n    } catch (error) {\n        showError(error);\n    }\n}\nasync function fetchNewsForCountry(country) {\n    try {\n        showLoading();\n        newsHeading.textContent = `Latest Health News for ${country}`;\n        const query = `(disease OR health OR virus) AND ${country}`;\n        const url = `https://newsapi.org/v2/everything?q=${encodeURIComponent(query)}&language=en&sortBy=publishedAt&apiKey=${apiKey}`;\n        const response = await fetch(url);\n        if (!response.ok) throw new Error('Network response was not ok');\n        const data = await response.json();\n        allArticles = data.articles;\n        displayNews(allArticles);\n    } catch (error) {\n        showError(error);\n        fetchGeneralNews();\n    }\n}\nfunction showLoading() {\n    newsContainer.innerHTML = `\n        <div class=\"loading-spinner\">\n            <i class=\"fas fa-newspaper\"></i>\n            <p>Loading health news...</p>\n        </div>\n    `;\n}\nfunction displayNews(articles) {\n    if (!articles || articles.length === 0) {\n        newsContainer.innerHTML = `\n            <div class=\"no-articles\">\n                <i class=\"fas fa-info-circle\"></i>\n                <p>No news articles available at the moment.</p>\n            </div>\n        `;\n        return;\n    }\n    newsContainer.innerHTML = articles.map((article)=>`\n        <div class=\"news-article\">\n            <div class=\"news-image-container\">\n                <img src=\"${article.urlToImage || './assets/images/news-placeholder.jpg'}\" \n                     alt=\"${article.title || 'News image'}\"\n                     class=\"news-image\"\n                     onerror=\"this.onerror=null;this.src='./assets/images/news-placeholder.jpg'\">\n            </div>\n            <div class=\"news-content\">\n                <h3><a href=\"${article.url}\" target=\"_blank\" rel=\"noopener\">${article.title || \"No title available\"}</a></h3>\n                <p class=\"news-description\">${article.description?.substring(0, 150) || \"No description available\"}...</p>\n                <div class=\"news-meta\">\n                    <span><i class=\"fas fa-source\"></i> ${article.source?.name || \"Unknown source\"}</span>\n                    <span><i class=\"fas fa-calendar-alt\"></i> ${formatDate(article.publishedAt)}</span>\n                </div>\n            </div>\n        </div>\n    `).join('');\n}\nfunction formatDate(dateString) {\n    if (!dateString) return \"Unknown date\";\n    const options = {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n}\nfunction showError(error) {\n    console.error('Error:', error);\n    newsContainer.innerHTML = `\n        <div class=\"error-message\">\n            <i class=\"fas fa-exclamation-triangle\"></i>\n            <p>Error loading news: ${error.message}</p>\n            <button class=\"retry-btn\" onclick=\"window.location.reload()\">\n                <i class=\"fas fa-sync-alt\"></i> Try Again\n            </button>\n        </div>\n    `;\n}\n// للاستدعاء من الصفحات الأخرى\nwindow.updateNewsForCountry = (country)=>{\n    fetchNewsForCountry(country);\n};\n\n},{}]},[\"juMe2\"], \"juMe2\", \"parcelRequire1875\", {})\n\n//# sourceMappingURL=news.d0be1a82.js.map\n","\r\njavascript\r\nCopy\r\nconst newsContainer = document.getElementById('newsContainer');\r\nconst newsHeading = document.getElementById('newsHeading');\r\nlet allArticles = [];\r\nconst apiKey = '8cf220f2e3f548b78aa38afc2f12b039'; // استبدل بمفتاحك\r\n\r\ndocument.addEventListener('DOMContentLoaded', initNewsModule);\r\n\r\nfunction initNewsModule() {\r\n    const selectedCountry = localStorage.getItem('selectedCountry');\r\n    selectedCountry ? fetchNewsForCountry(selectedCountry) : fetchGeneralNews();\r\n}\r\n\r\nasync function fetchGeneralNews() {\r\n    try {\r\n        showLoading();\r\n        const url = `https://newsapi.org/v2/top-headlines?category=health&language=en&pageSize=30&apiKey=${apiKey}`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        allArticles = data.articles;\r\n        displayNews(allArticles);\r\n    } catch (error) {\r\n        showError(error);\r\n    }\r\n}\r\nasync function fetchNewsForCountry(country) {\r\n    try {\r\n        showLoading();\r\n        newsHeading.textContent = `Latest Health News for ${country}`;\r\n        const query = `(disease OR health OR virus) AND ${country}`;\r\n        const url = `https://newsapi.org/v2/everything?q=${encodeURIComponent(query)}&language=en&sortBy=publishedAt&apiKey=${apiKey}`;\r\n        \r\n        const response = await fetch(url);\r\n        \r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        \r\n        const data = await response.json();\r\n        allArticles = data.articles;\r\n        displayNews(allArticles);\r\n    } catch (error) {\r\n        showError(error);\r\n        fetchGeneralNews();\r\n    }\r\n}\r\n\r\nfunction showLoading() {\r\n    newsContainer.innerHTML = `\r\n        <div class=\"loading-spinner\">\r\n            <i class=\"fas fa-newspaper\"></i>\r\n            <p>Loading health news...</p>\r\n        </div>\r\n    `;\r\n}\r\n\r\nfunction displayNews(articles) {\r\n    if (!articles || articles.length === 0) {\r\n        newsContainer.innerHTML = `\r\n            <div class=\"no-articles\">\r\n                <i class=\"fas fa-info-circle\"></i>\r\n                <p>No news articles available at the moment.</p>\r\n            </div>\r\n        `;\r\n        return;\r\n    }\r\n\r\n    newsContainer.innerHTML = articles.map(article => `\r\n        <div class=\"news-article\">\r\n            <div class=\"news-image-container\">\r\n                <img src=\"${article.urlToImage || './assets/images/news-placeholder.jpg'}\" \r\n                     alt=\"${article.title || 'News image'}\"\r\n                     class=\"news-image\"\r\n                     onerror=\"this.onerror=null;this.src='./assets/images/news-placeholder.jpg'\">\r\n            </div>\r\n            <div class=\"news-content\">\r\n                <h3><a href=\"${article.url}\" target=\"_blank\" rel=\"noopener\">${article.title || \"No title available\"}</a></h3>\r\n                <p class=\"news-description\">${article.description?.substring(0, 150) || \"No description available\"}...</p>\r\n                <div class=\"news-meta\">\r\n                    <span><i class=\"fas fa-source\"></i> ${article.source?.name || \"Unknown source\"}</span>\r\n                    <span><i class=\"fas fa-calendar-alt\"></i> ${formatDate(article.publishedAt)}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `).join('');\r\n}\r\n\r\nfunction formatDate(dateString) {\r\n    if (!dateString) return \"Unknown date\";\r\n    const options = { year: 'numeric', month: 'short', day: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n}\r\n\r\nfunction showError(error) {\r\n    console.error('Error:', error);\r\n    newsContainer.innerHTML = `\r\n        <div class=\"error-message\">\r\n            <i class=\"fas fa-exclamation-triangle\"></i>\r\n            <p>Error loading news: ${error.message}</p>\r\n            <button class=\"retry-btn\" onclick=\"window.location.reload()\">\r\n                <i class=\"fas fa-sync-alt\"></i> Try Again\r\n            </button>\r\n        </div>\r\n    `;\r\n}\r\n\r\n// للاستدعاء من الصفحات الأخرى\r\nwindow.updateNewsForCountry = (country) => {\r\n    fetchNewsForCountry(country);\r\n};"],"names":["modules","entry","mainEntry","parcelRequireName","externals","distDir","publicUrl","devServer","globalObject","globalThis","self","window","global","previousRequire","importMap","i","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","length","mainExports","define","amd","__globalThis","javascript","Copy","newsContainer","document","getElementById","newsHeading","allArticles","apiKey","fetchGeneralNews","showLoading","url","response","fetch","data","json","articles","displayNews","error","showError","fetchNewsForCountry","country","textContent","query","encodeURIComponent","ok","innerHTML","map","article","dateString","urlToImage","title","description","substring","source","publishedAt","Date","toLocaleDateString","undefined","year","month","day","join","console","message","addEventListener","selectedCountry","localStorage","getItem","updateNewsForCountry"],"version":3,"file":"news.d0be1a82.js.map"}