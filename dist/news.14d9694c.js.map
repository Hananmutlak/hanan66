{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,C,E,C,E,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,O,C,K,E,E,S,C,K,E,E,S,C,K,E,E,C,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,I,E,E,E,A,C,U,O,S,A,a,O,O,O,O,C,E,Y,O,Q,O,G,E,O,W,O,C,E,C,E,C,M,C,S,C,C,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GC+IA,EAAA,MAAA,CAAA,EAAA,sBAAA,IAAS,GAzIT,IAAM,EAAgB,SAAS,cAAc,CAAC,iBAC1C,EAAiB,GAiBrB,SAAS,EAAsB,CAAK,EAC5B,EAAM,MAAM,EAAI,EAAM,MAAM,CAAC,OAAO,EAGpC,EAFiB,EAAM,MAAM,CAAC,OAAO,CAI7C,CAMA,eAAe,EAAoB,CAAO,EACtC,GAAI,CAAC,EAAe,OAGpB,IAAM,EAAc,SAAS,aAAa,CAAC,YACvC,GACA,CAAA,EAAY,WAAW,CAAG,CAAC,wBAAwB,EAAE,EAAA,CAAS,AAAT,EAIzD,EAAc,SAAS,CAAG,CAAC,oBAAoB,EAAE,EAAQ,OAAO,CAAC,CAEjE,GAAI,CAEA,IAAM,EAAQ,CAAC,4DAA4D,EAAE,EAAA,CAAS,CAChF,EAAM,uCAAuC,mBAAmB,2EAAyD,CAEzH,EAAW,MAAM,MAAM,GAE7B,GAAI,CAAC,EAAS,EAAE,CACZ,MAAM,AAAI,MAAM,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAA,CAAE,EAG5D,IAAM,EAAO,MAAM,EAAS,IAAI,GAChC,EAAY,EAAK,QAAQ,CAC7B,CAAE,MAAO,EAAO,CACZ,EAAc,SAAS,CAAG,CAAC,sCAAsC,EAAE,EAAM,OAAO,CAAC,IAAI,CAAC,AAC1F,CACJ,CASA,eAAe,IACX,GAAK,EAKL,GAAI,CAEA,EAAc,SAAS,CAAG,yBAG1B,IAAM,EAAW,MAAM,MAPf,4GAUR,GAAI,CAAC,EAAS,EAAE,CACZ,MAAM,AAAI,MAAM,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAA,CAAE,EAI5D,IAAM,EAAO,MAAM,EAAS,IAAI,GAGhC,EAAY,EAAK,QAAQ,CAC7B,CAAE,MAAO,EAAO,CAEZ,EAAc,SAAS,CAAG,CAAC,sCAAsC,EAAE,EAAM,OAAO,CAAC,IAAI,CAAC,AAC1F,CACJ,CAQA,SAAS,EAAY,CAAQ,EACzB,GAAK,GAGL,GAAI,CAAC,GAAY,AAAoB,IAApB,EAAS,MAAM,CAAQ,CACpC,EAAc,SAAS,CAAG,iCAC1B,MACJ,CAGA,EAAc,SAAS,CAAG,EACrB,KAAK,CAAC,EAAG,IACT,GAAG,CAAC,AAAA,GAAW;A;AAEE,0BAAA,EAAE,EAAQ,UAAU,EAAI,gDAAgD;A;AAEjE,iCAAA,EAAE,EAAQ,GAAG,CAAC,kBAAkB,EAAE,EAAQ,KAAK,EAAI,qBAAqB;AAClF,uBAAA,EAAE,EAAQ,WAAW,CAAG,EAAQ,WAAW,CAAC,SAAS,CAAC,EAAG,IAAO,MAAQ,4BAA4B;AAC3E,gDAAA,EAAE,EAAQ,MAAM,CAAC,IAAI,EAAI,UAAU,0BAA0B,EAAE,IAAI,KAAK,EAAQ,WAAW,EAAE,kBAAkB,GAAG;A;A;AAG1J,QAAA,CAAC,EAAE,IAAI,CAAC,IAChB,CAQA,SAAS,gBAAgB,CAAC,mBAAoB,KA5H1C,SAAS,gBAAgB,CAAC,kBAAmB,GAG7C,GA2HJ,E,E,C,iD,O,E,C,M,C,S,C,C,C,C,C,C,C,EC5IA,EAAQ,cAAc,CAAG,SAAU,CAAC,EAClC,OAAO,GAAK,EAAE,UAAU,CAAG,EAAI,CAAC,QAAS,CAAC,CAC5C,EAEA,EAAQ,iBAAiB,CAAG,SAAU,CAAC,EACrC,OAAO,cAAc,CAAC,EAAG,aAAc,CAAC,MAAO,CAAA,CAAI,EACrD,EAEA,EAAQ,SAAS,CAAG,SAAU,CAAM,CAAE,CAAI,EAkBxC,OAjBA,OAAO,IAAI,CAAC,GAAQ,OAAO,CAAC,SAAU,CAAG,EAE7B,YAAR,GACA,AAAQ,eAAR,GACA,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAM,IAK7C,OAAO,cAAc,CAAC,EAAM,EAAK,CAC/B,WAAY,CAAA,EACZ,IAAK,WACH,OAAO,CAAM,CAAC,EAAI,AACpB,CACF,EACF,GAEO,CACT,EAEA,EAAQ,MAAM,CAAG,SAAU,CAAI,CAAE,CAAQ,CAAE,CAAG,EAC5C,OAAO,cAAc,CAAC,EAAM,EAAU,CACpC,WAAY,CAAA,EACZ,IAAK,CACP,EACF,C,E,C,E,E,C,Q,C,Q","sources":["<anon>","src/js/news.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (\n  modules,\n  entry,\n  mainEntry,\n  parcelRequireName,\n  distDir,\n  publicUrl,\n  devServer\n) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var importMap = previousRequire.i || {};\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.require = nodeRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.distDir = distDir;\n  newRequire.publicUrl = publicUrl;\n  newRequire.devServer = devServer;\n  newRequire.i = importMap;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  // Only insert newRequire.load when it is actually used.\n  // The code in this file is linted against ES5, so dynamic import is not allowed.\n  // INSERT_LOAD_HERE\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n    }\n  }\n})({\"juMe2\":[function(require,module,exports,__globalThis) {\n/**\r\n * @module NewsModule\r\n * @description Handles fetching and displaying health-related news with country integration\r\n */ // Global variables\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n// Export functions for use in other modules\nparcelHelpers.export(exports, \"fetchNewsForCountry\", ()=>fetchNewsForCountry);\nconst newsContainer = document.getElementById('newsContainer');\nlet currentCountry = '';\n/**\r\n * Initializes the news module and sets up event listeners\r\n */ function initNewsModule() {\n    // Listen for country selection events from the map\n    document.addEventListener('countrySelected', handleCountrySelected);\n    // Fetch general health news on initial load\n    fetchNews();\n}\n/**\r\n * Handles the country selection event from the map\r\n * @param {CustomEvent} event - The country selection event\r\n */ function handleCountrySelected(event) {\n    if (event.detail && event.detail.country) {\n        currentCountry = event.detail.country;\n        // Update news with the selected country\n        fetchNewsForCountry(currentCountry);\n    }\n}\n/**\r\n * Fetches news specifically for the selected country\r\n * @param {string} country - The country to fetch news for\r\n */ async function fetchNewsForCountry(country) {\n    if (!newsContainer) return;\n    // Update heading if it exists\n    const newsHeading = document.querySelector('#news h2');\n    if (newsHeading) newsHeading.textContent = `Latest Disease News for ${country}`;\n    // Display loading message\n    newsContainer.innerHTML = `<p>Loading news for ${country}...</p>`;\n    try {\n        const apiKey = '8cf220f2e3f548b78aa38afc2f12b039';\n        const query = `(disease OR pandemic OR outbreak OR virus OR infection) AND ${country}`;\n        const url = `https://newsapi.org/v2/everything?q=${encodeURIComponent(query)}&language=en&sortBy=publishedAt&apiKey=${apiKey}`;\n        const response = await fetch(url);\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n        const data = await response.json();\n        displayNews(data.articles);\n    } catch (error) {\n        newsContainer.innerHTML = `<p class=\"error\">Error fetching news: ${error.message}</p>`;\n    }\n}\n/**\r\n * Fetches the latest health-related news using NewsAPI.\r\n * Displays the news articles in the `newsContainer` element.\r\n * \r\n * @async\r\n * @function fetchNews\r\n */ async function fetchNews() {\n    if (!newsContainer) return;\n    const apiKey = '8cf220f2e3f548b78aa38afc2f12b039';\n    const url = `https://newsapi.org/v2/top-headlines?category=health&language=en&apiKey=${apiKey}`;\n    try {\n        // Display loading message while fetching the data\n        newsContainer.innerHTML = `<p>Loading news...</p>`;\n        // Fetch the data from the NewsAPI\n        const response = await fetch(url);\n        // If the response is not okay, throw an error\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n        // Convert the response to JSON format\n        const data = await response.json();\n        // Display the fetched articles\n        displayNews(data.articles);\n    } catch (error) {\n        // Handle errors and display an error message\n        newsContainer.innerHTML = `<p class=\"error\">Error fetching news: ${error.message}</p>`;\n    }\n}\n/**\r\n * Displays the news articles in the `newsContainer` element.\r\n * \r\n * @function displayNews\r\n * @param {Array} articles - An array of news article objects.\r\n */ function displayNews(articles) {\n    if (!newsContainer) return;\n    // If no articles are found, display a message\n    if (!articles || articles.length === 0) {\n        newsContainer.innerHTML = \"<p>No news articles found.</p>\";\n        return;\n    }\n    // Display up to 12 articles in the container\n    newsContainer.innerHTML = articles.slice(0, 12) // Display only the first 12 articles\n    .map((article)=>`\n            <div class=\"news-article\">\n                <img src=\"${article.urlToImage || 'https://via.placeholder.com/300?text=No+Image'}\" alt=\"News Image\">\n                <div class=\"news-content\">\n                    <h3><a href=\"${article.url}\" target=\"_blank\">${article.title || \"No title available\"}</a></h3>\n                    <p>${article.description ? article.description.substring(0, 80) + '...' : \"No description available.\"}</p>\n                    <p><strong>Source:</strong> ${article.source.name || \"Unknown\"} | <strong>Date:</strong> ${new Date(article.publishedAt).toLocaleDateString()}</p>\n                </div>\n            </div>\n        `).join('');\n}\n/**\r\n * Event listener that runs once the DOM content is loaded.\r\n * It initializes the news module.\r\n * \r\n * @event document#DOMContentLoaded\r\n */ document.addEventListener('DOMContentLoaded', ()=>{\n    initNewsModule();\n});\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"l5Lmv\"}],\"l5Lmv\":[function(require,module,exports,__globalThis) {\nexports.interopDefault = function(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n};\nexports.defineInteropFlag = function(a) {\n    Object.defineProperty(a, '__esModule', {\n        value: true\n    });\n};\nexports.exportAll = function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n};\nexports.export = function(dest, destName, get) {\n    Object.defineProperty(dest, destName, {\n        enumerable: true,\n        get: get\n    });\n};\n\n},{}]},[\"juMe2\"], \"juMe2\", \"parcelRequire1875\")\n\n//# sourceMappingURL=news.14d9694c.js.map\n","/**\r\n * @module NewsModule\r\n * @description Handles fetching and displaying health-related news with country integration\r\n */\r\n\r\n// Global variables\r\nconst newsContainer = document.getElementById('newsContainer');\r\nlet currentCountry = '';\r\n\r\n/**\r\n * Initializes the news module and sets up event listeners\r\n */\r\nfunction initNewsModule() {\r\n    // Listen for country selection events from the map\r\n    document.addEventListener('countrySelected', handleCountrySelected);\r\n    \r\n    // Fetch general health news on initial load\r\n    fetchNews();\r\n}\r\n\r\n/**\r\n * Handles the country selection event from the map\r\n * @param {CustomEvent} event - The country selection event\r\n */\r\nfunction handleCountrySelected(event) {\r\n    if (event.detail && event.detail.country) {\r\n        currentCountry = event.detail.country;\r\n        // Update news with the selected country\r\n        fetchNewsForCountry(currentCountry);\r\n    }\r\n}\r\n\r\n/**\r\n * Fetches news specifically for the selected country\r\n * @param {string} country - The country to fetch news for\r\n */\r\nasync function fetchNewsForCountry(country) {\r\n    if (!newsContainer) return;\r\n    \r\n    // Update heading if it exists\r\n    const newsHeading = document.querySelector('#news h2');\r\n    if (newsHeading) {\r\n        newsHeading.textContent = `Latest Disease News for ${country}`;\r\n    }\r\n    \r\n    // Display loading message\r\n    newsContainer.innerHTML = `<p>Loading news for ${country}...</p>`;\r\n    \r\n    try {\r\n        const apiKey = '8cf220f2e3f548b78aa38afc2f12b039';\r\n        const query = `(disease OR pandemic OR outbreak OR virus OR infection) AND ${country}`;\r\n        const url = `https://newsapi.org/v2/everything?q=${encodeURIComponent(query) }&language=en&sortBy=publishedAt&apiKey=${apiKey}`;\r\n        \r\n        const response = await fetch(url);\r\n        \r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        displayNews(data.articles);\r\n    } catch (error) {\r\n        newsContainer.innerHTML = `<p class=\"error\">Error fetching news: ${error.message}</p>`;\r\n    }\r\n}\r\n\r\n/**\r\n * Fetches the latest health-related news using NewsAPI.\r\n * Displays the news articles in the `newsContainer` element.\r\n * \r\n * @async\r\n * @function fetchNews\r\n */\r\nasync function fetchNews() {\r\n    if (!newsContainer) return;\r\n    \r\n    const apiKey = '8cf220f2e3f548b78aa38afc2f12b039';\r\n    const url = `https://newsapi.org/v2/top-headlines?category=health&language=en&apiKey=${apiKey}`;\r\n\r\n    try {\r\n        // Display loading message while fetching the data\r\n        newsContainer.innerHTML = `<p>Loading news...</p>`;\r\n        \r\n        // Fetch the data from the NewsAPI\r\n        const response = await fetch(url) ;\r\n\r\n        // If the response is not okay, throw an error\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        // Convert the response to JSON format\r\n        const data = await response.json();\r\n        \r\n        // Display the fetched articles\r\n        displayNews(data.articles);\r\n    } catch (error) {\r\n        // Handle errors and display an error message\r\n        newsContainer.innerHTML = `<p class=\"error\">Error fetching news: ${error.message}</p>`;\r\n    }\r\n}\r\n\r\n/**\r\n * Displays the news articles in the `newsContainer` element.\r\n * \r\n * @function displayNews\r\n * @param {Array} articles - An array of news article objects.\r\n */\r\nfunction displayNews(articles) {\r\n    if (!newsContainer) return;\r\n    \r\n    // If no articles are found, display a message\r\n    if (!articles || articles.length === 0) {\r\n        newsContainer.innerHTML = \"<p>No news articles found.</p>\";\r\n        return;\r\n    }\r\n\r\n    // Display up to 12 articles in the container\r\n    newsContainer.innerHTML = articles\r\n        .slice(0, 12) // Display only the first 12 articles\r\n        .map(article => `\r\n            <div class=\"news-article\">\r\n                <img src=\"${article.urlToImage || 'https://via.placeholder.com/300?text=No+Image'}\" alt=\"News Image\">\r\n                <div class=\"news-content\">\r\n                    <h3><a href=\"${article.url}\" target=\"_blank\">${article.title || \"No title available\"}</a></h3>\r\n                    <p>${article.description ? article.description.substring(0, 80)  + '...' : \"No description available.\"}</p>\r\n                    <p><strong>Source:</strong> ${article.source.name || \"Unknown\"} | <strong>Date:</strong> ${new Date(article.publishedAt).toLocaleDateString()}</p>\r\n                </div>\r\n            </div>\r\n        `).join('');\r\n}\r\n\r\n/**\r\n * Event listener that runs once the DOM content is loaded.\r\n * It initializes the news module.\r\n * \r\n * @event document#DOMContentLoaded\r\n */\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    initNewsModule();\r\n});\r\n\r\n// Export functions for use in other modules\r\nexport { fetchNewsForCountry };\r\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","distDir","publicUrl","devServer","globalObject","globalThis","self","window","global","previousRequire","importMap","i","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","length","mainExports","define","amd","__globalThis","parcelHelpers","defineInteropFlag","export","fetchNewsForCountry","newsContainer","document","getElementById","currentCountry","handleCountrySelected","event","detail","country","newsHeading","querySelector","textContent","innerHTML","query","url","encodeURIComponent","response","fetch","ok","status","data","json","displayNews","articles","error","message","fetchNews","slice","map","article","urlToImage","title","description","substring","source","Date","publishedAt","toLocaleDateString","join","addEventListener","interopDefault","a","__esModule","default","value","exportAll","dest","keys","forEach","key","prototype","hasOwnProperty","enumerable","destName"],"version":3,"file":"news.14d9694c.js.map"}